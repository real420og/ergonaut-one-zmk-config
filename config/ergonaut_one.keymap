#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        vimCopyBuff: vimCopyBuff {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp PLUS &kp Y>;
            label = "VIMCOPYBUFF";
        };

        minus_greater_than: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "NEW_MACRO";
        };

        alt_alt_without_releasing: new_macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "NEW_MACRO2";
        };

        shift_shift: shift_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "SHIFT_SHIFT";
        };

        exclamatory_and_equal: exclamatory_and_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL>;
            label = "EXCLAMATORY_AND_EQUAL";
        };
    };

    behaviors {
        vimCopyBuffHold: vimCopyBuffHold {
            compatible = "zmk,behavior-hold-tap";
            label = "VIMCOPYBUFFHOLD";
            bindings = <&mo>, <&vimCopyBuff>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 24 25 26 17 29 0 1 2 3 4 5 27 28 36 37 38 4 5 16 17 28 29 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
            hold-while-undecided;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 6 7 8 9 10 11 35 34 33 32 31 19 18 40 39 41 30>;
        };

        mt_hold_prefer_release: mt_hold_prefer_release {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HOLD_PREFER_RELEASE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 29 30 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        lt_hold_prefer_release: lt_hold_prefer_release {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_HOLD_PREFER_RELEASE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-on-release;
        };

        layer7_a: layer7_a {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER7_A";
            bindings = <&alt_alt_without_releasing>, <&minus_greater_than>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        layer7_f: layer7_f {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER7_F";
            bindings = <&shift_shift>, <&exclamatory_and_equal>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        lt_tap_prefer_release: lt_tap_prefer_release {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TAP_PREFER_RELEASE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
        };

        hml2: hml2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HML2";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "hold-preferred";
            hold-while-undecided;
        };

        hmr2: hmr2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR2";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none          &kp Q            &kp W         &kp E                          &kp R                             &kp T                            &kp Y                            &kp U                                  &kp I                                   &kp O         &kp P                     &kp MINUS
&kp BACKSPACE  &hml LEFT_ALT A  &hml LCTRL S  &hml LEFT_COMMAND D            &hml LEFT_SHIFT F                 &kp G                            &kp H                            &hml RIGHT_SHIFT J                     &hml RIGHT_COMMAND K                    &hml RCTRL L  &hml RIGHT_ALT SEMICOLON  &mt RCTRL SQT
&bootloader    &kp Z            &kp X         &kp C                          &kp V                             &kp B                            &kp N                            &kp M                                  &kp COMMA                               &kp DOT       &kp FSLH                  &kp ENTER
                                              &lt_hold_prefer_release 2 F16  &lt_hold_prefer_release 7 ESCAPE  &lt_hold_prefer_release 1 GRAVE  &lt_hold_prefer_release 6 SPACE  &lt_tap_prefer_release 6 LEFT_BRACKET  &lt_tap_prefer_release 6 RIGHT_BRACKET
            >;
        };

        lower_layer {
            bindings = <
&none  &none  &none  &none   &none   &none   &none   &none   &none   &none   &none   &none
&none  &none  &none  &none   &none   &none   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &none
&none  &none  &none  &none   &none   &none   &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
                     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&vimCopyBuff  &none  &none  &none  &none  &none  &none            &none          &none         &none                 &none                  &none
&none         &none  &none  &none  &none  &none  &kp EXCLAMATION  &kp AT_SIGN    &kp POUND     &kp DOLLAR            &kp PERCENT            &none
&none         &none  &none  &none  &none  &none  &kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
                            &none  &none  &none  &none            &none          &none
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &sys_reset    &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none        &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };

        old_default {
            bindings = <
&kp Q            &kp W         &kp E                &kp R         &kp T             &vimCopyBuffHold 1 0  &kp Y      &kp U              &kp I                &kp O        &kp P                    &kp LBKT
&hml LEFT_ALT A  &hml LCTRL S  &hml LEFT_COMMAND D  &hml LSHFT F  &kp G             &kp TAB               &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RCTRL L  &mt RIGHT_ALT SEMICOLON  &mt RCTRL SQT
&kp Z            &kp X         &kp C                &kp V         &kp B             &kp BACKSPACE         &kp N      &kp M              &kp COMMA            &kp DOT      &kp FSLH                 &mt RALT BSLH
                                                    &lt 2 F16     &mt LSHFT ESCAPE  &lt 1 RET             &lt 1 ESC  &mt RSHFT BSPC     &lt 2 DEL
            >;
        };

        layer_5 {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                                             &trans     &trans     &trans        &trans        &trans    &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans        &trans           &trans  &trans
                        &trans  &trans  &trans  &trans          &trans          &trans
            >;
        };

        layer_7 {
            bindings = <
&vimCopyBuff  &none  &none  &none  &none  &none  &none            &none          &none         &none                 &none                  &none
&none         &none  &none  &none  &none  &none  &kp EXCLAMATION  &kp AT_SIGN    &kp POUND     &kp DOLLAR            &kp PERCENT            &none
&none         &none  &none  &none  &none  &none  &kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
                            &none  &none  &none  &none            &none          &none
            >;
        };
    };
};
